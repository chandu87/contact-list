{"version":3,"sources":["../src/index.js"],"names":["app","myContactList","ContactList","use","bodyParser","urlencoded","extended","json","set","get","req","res","render","Object","keys","query","length","contacts","list","filteredData","filter","element","age","send","name","post","console","log","body","contact","Contact","addContact","redirect","patch","contactToUpdate","updateContact","params","contact_id","delete","listen"],"mappings":";;AAAA;;;;AACA;;AAEA;;;;AAGA;;;;;;AAJA,MAAMA,MAAM,wBAAZ;;;AAGA,MAAMC,gBAAgB,IAAIC,wBAAJ,CAAgB,gBAAhB,CAAtB;;;AAGAF,IAAIG,GAAJ,CAAQC,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACA;AACAN,IAAIG,GAAJ,CAAQC,qBAAWG,IAAX,EAAR;AACAP,IAAIQ,GAAJ,CAAQ,aAAR,EAAsB,KAAtB;AACAR,IAAIG,GAAJ,CAAQ,8BAAe,SAAf,CAAR;;AAEA;AACAH,IAAIS,GAAJ,CAAQ,GAAR,EAAa,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC9B;AACAA,MAAIC,MAAJ,CAAW,OAAX;AACD,CAHD;;AAKA;AACAZ,IAAIS,GAAJ,CAAQ,WAAR,EAAqB,UAASC,GAAT,EAAcC,GAAd,EAAmB;AACtC;AACA,MAAI,CAACE,OAAOC,IAAP,CAAYJ,IAAIK,KAAhB,EAAuBC,MAA5B,EAAoC;AAClC;AACAL,QAAIC,MAAJ,CAAW,UAAX,EAAuB,EAACK,UAAUhB,cAAciB,IAAzB,EAAvB;AACD,GAHD,MAGO;AACL,UAAMC,eAAelB,cAAciB,IAAd,CAAmBE,MAAnB,CAA0BC,WAAW;AACxD,aAAOA,QAAQC,GAAR,IAAeZ,IAAIK,KAAJ,CAAUO,GAAhC;AACD,KAFoB,CAArB;AAGAX,QAAIY,IAAJ,CAASJ,aAAaH,MAAb,IAAuB,CAAvB,GAA2B,kCAA3B,GAAgEG,YAAzE;AACD;AACF,CAXD;;AAaA;AACAnB,IAAIS,GAAJ,CAAQ,OAAR,EAAiB,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAClCA,MAAIY,IAAJ,CAAS,EAAEC,MAAM,SAAR,EAAT;AACD,CAFD;AAGAxB,IAAIS,GAAJ,CAAQ,eAAR,EAAyB,UAASC,GAAT,EAAcC,GAAd,EAAkB;AACzCA,MAAIC,MAAJ,CAAW,KAAX;AACD,CAFD;;AAIA;AACAZ,IAAIyB,IAAJ,CAAS,WAAT,EAAsB,UAASf,GAAT,EAAcC,GAAd,EAAmB;AACvC;AACAe,UAAQC,GAAR,CAAYjB,IAAIkB,IAAhB;AACA,QAAMC,UAAU,IAAIC,oBAAJ,CAAYpB,IAAIkB,IAAhB,CAAhB;AACAF,UAAQC,GAAR,CAAYE,OAAZ;AACA;AACA5B,gBAAc8B,UAAd,CAAyBF,OAAzB;AACAlB,MAAIqB,QAAJ,CAAa,WAAb;AACD,CARD;;AAUA;AACAhC,IAAIiC,KAAJ,CAAU,uBAAV,EAAmC,UAASvB,GAAT,EAAcC,GAAd,EAAmB;AAClD,QAAMuB,kBAAkB,IAAIJ,oBAAJ,CAAYpB,IAAIkB,IAAhB,CAAxB;AACFjB,MAAIY,IAAJ,CAAStB,cAAckC,aAAd,CAA4BzB,IAAI0B,MAAJ,CAAWC,UAAvC,EAAmDH,eAAnD,CAAT;AACD,CAHD;;AAKA;AACAlC,IAAIsC,MAAJ,CAAW,uBAAX,EAAoC,UAAS5B,GAAT,EAAcC,GAAd,EAAmB;AACrD;AACAA,MAAIqB,QAAJ,CAAa,WAAb;AACD,CAHD;;AAKA;AACAhC,IAAIuC,MAAJ,CAAW,IAAX,EAAiB,YAAW;AAC1Bb,UAAQC,GAAR,CAAY,0BAAZ;AACD,CAFD","file":"index.js","sourcesContent":["import express from \"express\";\nimport { Contact, ContactList } from \"./ContactList\";\nconst app = express();\nimport methodOverride from 'method-override';\n\nconst myContactList = new ContactList(\"./my_list.json\");\nimport bodyParser from \"body-parser\";\n\napp.use(bodyParser.urlencoded({ extended: false }));\n//parse appliation JSON\napp.use(bodyParser.json());\napp.set(\"view engine\",\"ejs\");\napp.use(methodOverride(\"_method\"));\n\n//GET ROUTE for HOME\napp.get(\"/\", function(req, res) {\n  // res.send(\"Hello world\");\n  res.render(\"index\");\n});\n\n//GET ROUTE for Contacts\napp.get(\"/contacts\", function(req, res) {\n  //----- Checking whether requested query is empty or not -------\n  if (!Object.keys(req.query).length) {\n    // res.send(myContactList.list);\n    res.render(\"contacts\", {contacts :myContactList.list});\n  } else {\n    const filteredData = myContactList.list.filter(element => {\n      return element.age == req.query.age;\n    });\n    res.send(filteredData.length == 0 ? \"Entered age not found, Try again\" : filteredData);\n  }\n});\n\n//GET ROUTE for sample testing\napp.get(\"/test\", function(req, res) {\n  res.send({ name: \"chandra\" });\n});\napp.get(\"/contacts/add\", function(req, res){\n  res.render(\"add\");\n});\n\n//POST ROUTE for Adding contacts\napp.post(\"/contacts\", function(req, res) {\n  // console.log(req.body);\n  console.log(req.body);\n  const contact = new Contact(req.body);\n  console.log(contact)\n  // myContactList.addContact(contact).then(list => res.send(list));\n  myContactList.addContact(contact);\n  res.redirect(\"/contacts\");\n});\n\n//PATCH ROUTE for updating contacts which can be found in POSTMAN\napp.patch(\"/contacts/:contact_id\", function(req, res) {\n    const contactToUpdate = new Contact(req.body);\n  res.send(myContactList.updateContact(req.params.contact_id, contactToUpdate));\n});\n\n//DELETE ROUTE for deleting a item \napp.delete(\"/contacts/:contact_id\", function(req, res) {\n  //res.send(myContactList.deleteContact(req.params.contact_id));\n  res.redirect(\"/contacts\");\n});\n\n//Server listening PORT assignment\napp.listen(3000, function() {\n  console.log(\"Server started at : 3000\");\n});\n"]}